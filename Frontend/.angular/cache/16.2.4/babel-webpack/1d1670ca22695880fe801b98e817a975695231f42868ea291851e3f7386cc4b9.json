{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"../services/snackbar.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/toolbar\";\nimport * as i12 from \"@angular/flex-layout/flex\";\nfunction ForgotPasswordComponent_mat_error_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_mat_error_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ForgotPasswordComponent_mat_error_15_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵtemplate(2, ForgotPasswordComponent_mat_error_15_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls[\"email\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls[\"email\"].errors.pattern);\n  }\n}\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(fromBuilder, userService, dialogRef, ngxService, snackBarService) {\n      this.fromBuilder = fromBuilder;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackBarService = snackBarService;\n      this.forgotPasswordForm = FormGroup;\n    }\n    ngOnInit() {\n      this.forgotPasswordForm = this.fromBuilder.group({\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]]\n      });\n    }\n    handleSubmit() {\n      this.ngxService.start();\n      var data = this.forgotPasswordForm.value;\n      this.userService.forgotPassword(data).subscribe(res => {\n        this.ngxService.stop;\n        this.responseMessage = res?.message;\n        this.dialogRef.close();\n        this.snackBarService.openSnackBar(this.responseMessage, '');\n      }, err => {\n        this.ngxService.stop;\n        if (err.error?.message) {\n          this.responseMessage = err.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.error;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    static #_ = this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n      return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.SnackbarService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgotPasswordComponent,\n      selectors: [[\"app-forgot-password\"]],\n      decls: 25,\n      vars: 3,\n      consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", 1, \"mat-dialog-close\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\"]],\n      template: function ForgotPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\");\n          i0.ɵɵtext(3, \"Forgot Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"span\", 2);\n          i0.ɵɵelementStart(5, \"button\", 3)(6, \"mat-icon\");\n          i0.ɵɵtext(7, \"close \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(8, \"mat-dialog-content\", 4)(9, \"form\", 5)(10, \"div\", 6)(11, \"mat-form-field\", 7)(12, \"mat-label\");\n          i0.ɵɵtext(13, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 8);\n          i0.ɵɵtemplate(15, ForgotPasswordComponent_mat_error_15_Template, 3, 2, \"mat-error\", 9);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(16, \"mat-dialog-actions\", 10)(17, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function ForgotPasswordComponent_Template_button_click_17_listener() {\n            return ctx.handleSubmit();\n          });\n          i0.ɵɵelementStart(18, \"mat-icon\");\n          i0.ɵɵtext(19, \"send\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(20, \"Send Password \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"button\", 12)(22, \"mat-icon\");\n          i0.ɵɵtext(23, \"cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(24, \"Close \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.controls[\"email\"].touched && ctx.forgotPasswordForm.controls[\"email\"].invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !(ctx.forgotPasswordForm.valid && !ctx.forgotPasswordForm.dirty));\n        }\n      },\n      dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i7.MatButton, i7.MatIconButton, i3.MatDialogClose, i3.MatDialogContent, i3.MatDialogActions, i8.MatFormField, i8.MatLabel, i8.MatError, i9.MatIcon, i10.MatInput, i11.MatToolbar, i11.MatToolbarRow, i12.DefaultLayoutDirective, i12.DefaultFlexDirective],\n      styles: [\".mat-toolbar[_ngcontent-%COMP%]{width:auto;margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{padding:5px}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear{display:none}\"]\n    });\n  }\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}