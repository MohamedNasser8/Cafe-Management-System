{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/user.service\";\nimport * as i4 from \"../services/snackbar.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"ngx-ui-loader\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/toolbar\";\nimport * as i13 from \"@angular/flex-layout/flex\";\nfunction SignupComponent_mat_error_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, SignupComponent_mat_error_15_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵtemplate(2, SignupComponent_mat_error_15_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.signupForm.controls.name.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.signupForm.controls.name.errors.patterns);\n  }\n}\nexport let SignupComponent = /*#__PURE__*/(() => {\n  class SignupComponent {\n    constructor(formBuilder, router, userService, snackBarService, dialogRef, ngxService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.userService = userService;\n      this.snackBarService = snackBarService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.password = true;\n      this.confirmPassword = true;\n      this.signupForm = FormGroup;\n    }\n    ngOnInit() {\n      this.signupForm = this.formBuilder.group({\n        name: [null, [Validators.required], Validators.pattern(GlobalConstants.nameRegex)],\n        email: [null, [Validators.required], Validators.pattern(GlobalConstants.emailRegex)],\n        contactNumber: [null, [Validators.required], Validators.pattern(GlobalConstants.contactNumberRegex)],\n        password: [null, [Validators.required]],\n        confirmPassword: [null, [Validators.required]]\n      });\n    }\n    validateSubmit() {\n      if (this.signupForm.controls['password'].value != this.signupForm.controls['confirmPassword'].value) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    handleSubmit() {\n      this.ngxService.start();\n      var formData = this.signupForm.value;\n      var data = {\n        name: formData.name,\n        email: formData.email,\n        contactNumber: formData.contactNumber,\n        password: formData.password\n      };\n      this.userService.signup(data).subscribe(res => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        this.responseMessage = res?.message;\n        this.snackBarService.openSnackBar(this.responseMessage, \"\");\n        this.router.navigate(['/']);\n      }, error => {\n        this.ngxService.stop();\n        if (error?.error?.message) {\n          this.responseMessage = error?.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    static #_ = this.ɵfac = function SignupComponent_Factory(t) {\n      return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.NgxUiLoaderService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SignupComponent,\n      selectors: [[\"app-signup\"]],\n      decls: 16,\n      vars: 2,\n      consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", 1, \"mat-dialog-close\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"standard\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"]],\n      template: function SignupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\");\n          i0.ɵɵtext(3, \"Signup\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"span\", 2);\n          i0.ɵɵelementStart(5, \"button\", 3)(6, \"mat-icon\");\n          i0.ɵɵtext(7, \"close\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(8, \"mat-dialog-content\", 4)(9, \"form\", 5)(10, \"div\", 6)(11, \"mat-form-field\", 7)(12, \"mat-label\");\n          i0.ɵɵtext(13, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 8);\n          i0.ɵɵtemplate(15, SignupComponent_mat_error_15_Template, 3, 2, \"mat-error\", 9);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.signupForm.controls.name.touched && ctx.signupForm.controls.name.invalid);\n        }\n      },\n      dependencies: [i7.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i8.MatIconButton, i5.MatDialogClose, i5.MatDialogContent, i9.MatFormField, i9.MatLabel, i9.MatError, i10.MatIcon, i11.MatInput, i12.MatToolbar, i12.MatToolbarRow, i13.DefaultLayoutDirective, i13.DefaultFlexDirective],\n      styles: [\".mat-toolbar[_ngcontent-%COMP%]{width:auto;margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{padding:5px}mat-hint[_ngcontent-%COMP%]{color:red}\"]\n    });\n  }\n  return SignupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}