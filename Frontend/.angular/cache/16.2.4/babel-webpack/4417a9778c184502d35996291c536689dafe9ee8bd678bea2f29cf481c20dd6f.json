{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"ngx-ui-loader\";\nimport * as i6 from \"../services/snackbar.service\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/toolbar\";\nimport * as i10 from \"@angular/flex-layout/flex\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, userService, router, dialogRef, ngxService, snackBar) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.router = router;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackBar = snackBar;\n      this.hide = true;\n      this.loginForm = FormGroup;\n    }\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n        password: [null, [Validators.required]]\n      });\n    }\n    handleSubmit() {\n      this.ngxService.start();\n      var data = this.loginForm.value;\n      this.userService.login(data).subscribe(res => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        localStorage.setItem('token', res.token);\n        this.router.navigate(['/cafe/dashboard']);\n      }, error => {\n        if (error.error?.message) this.responseMessage = error.error?.message;else this.responseMessage = GlobalConstants.error;\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(i5.NgxUiLoaderService), i0.ɵɵdirectiveInject(i6.SnackbarService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 8,\n      vars: 0,\n      consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", 1, \"mat-dialog-close\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\");\n          i0.ɵɵtext(3, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"span\", 2);\n          i0.ɵɵelementStart(5, \"button\", 3)(6, \"mat-icon\");\n          i0.ɵɵtext(7, \"close\");\n          i0.ɵɵelementEnd()()()();\n        }\n      },\n      dependencies: [i7.MatIconButton, i4.MatDialogClose, i8.MatIcon, i9.MatToolbar, i9.MatToolbarRow, i10.DefaultLayoutDirective],\n      styles: [\".mat-toolbar[_ngcontent-%COMP%]{width:auto;margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{padding:5px}mat-hint[_ngcontent-%COMP%]{color:red}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear{display:none}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}